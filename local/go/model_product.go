/*
 * EC
 *
 * EC API
 *
 * API version: 2023.1.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type Product struct {

	Id int64 `json:"id"`

	Name string `json:"name"`

	LocalizedName string `json:"localizedName"`

	ImageUrl string `json:"imageUrl"`
}

// AssertProductRequired checks if the required fields are not zero-ed
func AssertProductRequired(obj Product) error {
	elements := map[string]interface{}{
		"id": obj.Id,
		"name": obj.Name,
		"localizedName": obj.LocalizedName,
		"imageUrl": obj.ImageUrl,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseProductRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of Product (e.g. [][]Product), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseProductRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aProduct, ok := obj.(Product)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertProductRequired(aProduct)
	})
}
